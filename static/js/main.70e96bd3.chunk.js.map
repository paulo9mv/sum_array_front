{"version":3,"sources":["api/api.ts","components/result/Result.tsx","components/explanation/Explanation.tsx","screens/mainPage/MainPage.tsx","components/topbar/Topbar.tsx","components/footer/Footer.tsx","App.tsx","index.tsx"],"names":["getApi","payload","a","axios","patch","data","useStyles","makeStyles","container","maxWidth","Result","error","result","classes","Alert","className","severity","Explanation","Box","marginTop","Typography","variant","root","flex","alignSelf","marginBottom","wrapper","justifyContent","margin","position","MainPage","useState","loading","setLoading","setResult","setError","handleSubmit","values","arr","JSON","parse","arrayContent","response","index","errorMessage","undefined","Grid","item","xs","validate","errors","some","isNaN","e","validateOnBlur","onSubmit","render","form","name","input","meta","TextField","label","disabled","touched","helperText","multiline","placeholder","rows","size","Button","color","onClick","submit","display","topbar","top","alignItems","width","height","opacity","backgroundColor","border","fontWeight","padding","boxSizing","TopBar","footer","bottom","footerCenter","text","fontSize","Footer","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70e96bd3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"http://127.0.0.1:5000/equilibrium\";\n\ninterface GetApiPayload {\n  arr: Array<number>;\n}\n\ninterface GetApiResult {\n  index: number;\n}\n\nconst getApi = async (payload: GetApiPayload): Promise<GetApiResult> => {\n  const { data } = (await axios.patch(URL, payload)) as any;\n\n  return data;\n};\n\nexport default getApi;\n","import React, { FC } from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\ninterface Props {\n  error: string;\n  result: number | undefined;\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    maxWidth: 400,\n  },\n}));\n\nconst Result: FC<Props> = ({ error, result }) => {\n  const classes = useStyles();\n\n  const getAlertStatus = () => {\n    if (error) {\n      return \"error\";\n    }\n\n    if (result === -1) {\n      return \"info\";\n    } else if (result || result === 0) {\n      return \"success\";\n    }\n  };\n\n  const getAlertMessage = () => {\n    if (error) {\n      return `Oops! Something wrong happened.\n      Error status: ${error}`;\n    }\n\n    if (result === -1) {\n      return \"Your array doesn't have an equilibrium index\";\n    } else if (result || result === 0) {\n      return `The equilibrium index is at position ${result}`;\n    }\n  };\n\n  return error || result || result === 0 ? (\n    <Alert className={classes.container} severity={getAlertStatus()}>\n      {getAlertMessage()}\n    </Alert>\n  ) : null;\n};\n\nexport default Result;\n","import React, { FC } from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Explanation: FC = () => {\n  return (\n    <Box marginTop={4}>\n      <Typography variant=\"h2\">How is it done?</Typography>\n      <Typography>First, we sum all the elements of the array</Typography>\n      <Typography>Secondly, we start an paralel sum starting at 0</Typography>\n      <Typography>\n        Now, starting from the beginning, we iterate each element of the array\n      </Typography>\n      <Typography>\n        The element is subtracted from the total sum and the result is checked\n        if equal to paralel sum\n      </Typography>\n      <Typography>\n        If they are equal, we did it! The current position is the equilibrium\n        index.\n      </Typography>\n      <Typography>\n        Otherwise, we add the element to the paralel sum and iterate to the next\n        element, until an index is found. The total sum will decrease in each\n        iteration. If the array is over, there's no equilibrium index.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Explanation;\n","import React, { FC, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Form, Field } from \"react-final-form\";\nimport getApi from \"../../api/api\";\nimport Result from \"../../components/result/Result\";\nimport Explanation from \"../../components/explanation/Explanation\";\n\ninterface FormProps {\n  arrayContent: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flex: 1,\n    alignSelf: \"center\",\n    marginTop: 64,\n    marginBottom: 64,\n  },\n  wrapper: {\n    justifyContent: \"center\",\n    margin: 1,\n    position: \"relative\",\n  },\n}));\n\nconst MainPage: FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [result, setResult] = useState<number>();\n  const [error, setError] = useState<string>(\"\");\n\n  const handleSubmit = async (values: FormProps) => {\n    setLoading(true);\n    try {\n      const arr = JSON.parse(values.arrayContent);\n      const response = await getApi({ arr });\n\n      setResult(response.index);\n      setError(\"\");\n    } catch (error) {\n      const errorMessage: string =\n        error?.response?.data?.error || \"An unexpected error happened\";\n\n      setError(errorMessage);\n      setResult(undefined);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const classes = useStyles();\n\n  const validateForm = (values: FormProps) => {\n    const errors: any = {};\n\n    try {\n      const array = JSON.parse(values.arrayContent);\n\n      if (array.some(isNaN)) {\n        errors.arrayContent = \"Please, insert only numbers\";\n      }\n    } catch (e) {\n      errors.arrayContent = \"Please, insert an valid array.\";\n    } finally {\n      return errors;\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Box marginBottom={4}>\n          <Box marginBottom={4}>\n            <Typography variant=\"h5\">\n              With this amazing tool you can check out if an array has an\n              equilibrium index. Try it now!\n            </Typography>\n          </Box>\n          <Form<FormProps>\n            validate={validateForm}\n            validateOnBlur\n            onSubmit={handleSubmit}\n            render={({ handleSubmit, form }) => {\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Box marginBottom={4}>\n                    <Field\n                      name=\"arrayContent\"\n                      render={({ input, meta }) => (\n                        <TextField\n                          {...input}\n                          label=\"Array\"\n                          disabled={loading}\n                          error={meta.error && meta.touched}\n                          helperText={\n                            meta.error && meta.touched ? meta.error : null\n                          }\n                          multiline\n                          placeholder=\"[1,2,3,4,6]\"\n                          rows={4}\n                          size=\"medium\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    />\n                  </Box>\n                  <Box className={classes.wrapper}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={loading}\n                      onClick={form.submit}\n                    >\n                      {loading ? \"Loading\" : \"Try it\"}\n                    </Button>\n                  </Box>\n                </form>\n              );\n            }}\n          />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Result result={result} error={error} />\n        </Box>\n        <Explanation />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React, { FC } from \"react\";\n\nimport { makeStyles, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  topbar: {\n    position: \"fixed\",\n    top: 0,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: 40,\n    opacity: 1,\n    backgroundColor: \"antiquewhite\",\n    border: \"1px solid rgba(0, 0, 0, 1)\",\n    fontWeight: \"bold\",\n    padding: \"0px 20px\",\n    boxSizing: \"border-box\",\n  },\n}));\n\nconst TopBar: FC = () => {\n  const classes = useStyles();\n\n  return <Box className={classes.topbar}>Array Equilibrium Algorithm</Box>;\n};\n\nexport default TopBar;\n","import React, { FC } from \"react\";\n\nimport { Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  footer: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#333\",\n    color: \"white\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  footerCenter: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  text: {\n    fontSize: 24,\n  },\n}));\n\nconst Footer: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.footerCenter}>\n        <Typography className={classes.text}>\n          {`💻`} Made by Paulo Viana\n        </Typography>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport MainPage from \"./screens/mainPage/MainPage\";\nimport TopBar from \"./components/topbar/Topbar\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TopBar />\n        <MainPage />\n        <Footer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}