{"version":3,"sources":["api/api.ts","components/result/Result.tsx","components/explanation/Explanation.tsx","screens/mainPage/MainPage.tsx","components/topbar/Topbar.tsx","components/footer/Footer.tsx","App.tsx","index.tsx"],"names":["getApi","payload","a","axios","post","data","useStyles","makeStyles","container","maxWidth","Result","error","result","classes","Alert","className","severity","bold","fontWeight","Explanation","Box","marginTop","marginLeft","marginRight","marginBottom","Typography","variant","icon","style","justifyContent","root","flex","alignSelf","wrapper","margin","position","MainPage","useState","loading","setLoading","setResult","setError","handleSubmit","values","arr","JSON","parse","arrayContent","response","index","errorMessage","undefined","Grid","item","xs","validate","errors","some","isNaN","e","validateOnBlur","onSubmit","render","form","name","input","meta","TextField","label","disabled","touched","helperText","multiline","placeholder","rows","size","Button","color","onClick","submit","display","topbar","top","alignItems","width","height","opacity","backgroundColor","padding","boxSizing","TopBar","footer","bottom","footerCenter","text","fontSize","Footer","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ff84888d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://sumarray.herokuapp.com/equilibrium\";\n\ninterface GetApiPayload {\n  arr: Array<number>;\n}\n\ninterface GetApiResult {\n  index: number;\n}\n\nconst getApi = async (payload: GetApiPayload): Promise<GetApiResult> => {\n  const { data } = (await axios.post(URL, payload)) as any;\n\n  return data;\n};\n\nexport default getApi;\n","import React, { FC } from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\ninterface Props {\n  error: string;\n  result: number | undefined;\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    maxWidth: 400,\n  },\n}));\n\nconst Result: FC<Props> = ({ error, result }) => {\n  const classes = useStyles();\n\n  const getAlertStatus = () => {\n    if (error) {\n      return \"error\";\n    }\n\n    if (result === -1) {\n      return \"warning\";\n    } else if (result || result === 0) {\n      return \"success\";\n    }\n  };\n\n  const getAlertMessage = () => {\n    if (error) {\n      return `Oops! Something wrong happened.\n      Error status: ${error}`;\n    }\n\n    if (result === -1) {\n      return \"Your array doesn't have an equilibrium index\";\n    } else if (result || result === 0) {\n      return `The equilibrium index is at position ${result}`;\n    }\n  };\n\n  return error || result || result === 0 ? (\n    <Alert className={classes.container} severity={getAlertStatus()}>\n      {getAlertMessage()}\n    </Alert>\n  ) : null;\n};\n\nexport default Result;\n","import React, { FC } from \"react\";\nimport { Typography, Box, makeStyles } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(() => ({\n  bold: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst Explanation: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box marginTop={4} marginLeft={1} marginRight={1}>\n      <Box marginBottom={2}>\n        <Typography variant=\"h2\">How is it done?</Typography>\n      </Box>\n      <Alert icon={false} severity=\"info\" style={{ justifyContent: \"center\" }}>\n        <Typography>First, we sum all the elements of the array</Typography>\n        <Typography>Secondly, we start an paralel sum starting at 0</Typography>\n        <Typography>\n          Now, starting from the beginning, we iterate each element of the array\n        </Typography>\n        <Typography>\n          The element is subtracted from the total sum and the result is checked\n          if equal to paralel sum\n        </Typography>\n        <Typography className={classes.bold}>\n          If they are equal, we did it! The current position is the equilibrium\n          index.\n        </Typography>\n        <Typography>\n          Otherwise, we add the element to the paralel sum and iterate to the\n          next element, until an index is found. The total sum will decrease in\n          each iteration.\n        </Typography>\n        <Typography className={classes.bold}>\n          If the array is over, there's no equilibrium index.\n        </Typography>\n      </Alert>\n    </Box>\n  );\n};\n\nexport default Explanation;\n","import React, { FC, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Form, Field } from \"react-final-form\";\nimport getApi from \"../../api/api\";\nimport Result from \"../../components/result/Result\";\nimport Explanation from \"../../components/explanation/Explanation\";\n\ninterface FormProps {\n  arrayContent: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flex: 1,\n    alignSelf: \"center\",\n    marginTop: 64,\n    marginBottom: 64,\n  },\n  wrapper: {\n    justifyContent: \"center\",\n    margin: 1,\n    position: \"relative\",\n  },\n}));\n\nconst MainPage: FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [result, setResult] = useState<number>();\n  const [error, setError] = useState<string>(\"\");\n\n  const handleSubmit = async (values: FormProps) => {\n    setLoading(true);\n    try {\n      const arr = JSON.parse(values.arrayContent);\n      const response = await getApi({ arr });\n\n      setResult(response.index);\n      setError(\"\");\n    } catch (error) {\n      const errorMessage: string =\n        error?.response?.data?.error || \"An unexpected error happened\";\n\n      setError(errorMessage);\n      setResult(undefined);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const classes = useStyles();\n\n  const validateForm = (values: FormProps) => {\n    const errors: any = {};\n\n    try {\n      const array = JSON.parse(values.arrayContent);\n\n      if (array.some(isNaN)) {\n        errors.arrayContent = \"Please, insert only numbers\";\n      }\n    } catch (e) {\n      errors.arrayContent = \"Please, insert an valid array.\";\n    } finally {\n      return errors;\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Box marginBottom={4}>\n          <Box marginBottom={4}>\n            <Typography variant=\"h5\">\n              With this amazing tool you can check out if an array has an\n              equilibrium index. Try it now!\n            </Typography>\n          </Box>\n          <Form<FormProps>\n            validate={validateForm}\n            validateOnBlur\n            onSubmit={handleSubmit}\n            render={({ handleSubmit, form }) => {\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Box marginBottom={4}>\n                    <Field\n                      name=\"arrayContent\"\n                      render={({ input, meta }) => (\n                        <TextField\n                          {...input}\n                          label=\"Array\"\n                          disabled={loading}\n                          error={meta.error && meta.touched}\n                          helperText={\n                            meta.error && meta.touched ? meta.error : null\n                          }\n                          multiline\n                          placeholder=\"[1,2,3,4,6]\"\n                          rows={4}\n                          size=\"medium\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    />\n                  </Box>\n                  <Box className={classes.wrapper}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={loading}\n                      onClick={form.submit}\n                    >\n                      {loading ? \"Loading\" : \"Try it\"}\n                    </Button>\n                  </Box>\n                </form>\n              );\n            }}\n          />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Result result={result} error={error} />\n        </Box>\n        <Explanation />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React, { FC } from \"react\";\n\nimport { makeStyles, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  topbar: {\n    position: \"fixed\",\n    top: 0,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: 40,\n    opacity: 1,\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    padding: \"0px 20px\",\n    boxSizing: \"border-box\",\n  },\n}));\n\nconst TopBar: FC = () => {\n  const classes = useStyles();\n\n  return <Box className={classes.topbar}>Array Equilibrium Algorithm</Box>;\n};\n\nexport default TopBar;\n","import React, { FC } from \"react\";\n\nimport { Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  footer: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#333\",\n    color: \"white\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  footerCenter: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  text: {\n    fontSize: 24,\n  },\n}));\n\nconst Footer: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.footerCenter}>\n        <Typography className={classes.text}>\n          {`💻`} Made by Paulo Viana\n        </Typography>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport MainPage from \"./screens/mainPage/MainPage\";\nimport TopBar from \"./components/topbar/Topbar\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TopBar />\n        <MainPage />\n        <Footer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}